buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "io.sentry.jvm.gradle" version "4.13.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework:spring-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Apache POI
    implementation 'org.apache.poi:poi:5.1.0'
    implementation 'org.apache.poi:poi-ooxml:5.1.0'
    implementation 'org.apache.poi:poi-scratchpad:5.1.0'
    implementation 'org.apache.xmlbeans:xmlbeans:5.1.0'
    implementation 'org.apache.pdfbox:pdfbox:2.0.27'
    implementation 'org.apache.pdfbox:pdfbox-tools:2.0.27'
    implementation 'fr.opensagres.xdocreport:fr.opensagres.poi.xwpf.converter.pdf:2.1.0'


    //Jaxb
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    //AWS S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

    //CoolSMS
    implementation 'net.nurigo:sdk:4.3.0'

    //DB migration
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    //Monitoring
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.17.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true

    org = "be-project"
    projectName = "gemm-" + System.getenv("profile") + "server"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

tasks.named('test') {
    useJUnitPlatform()
}


task copyPrivate(type: Copy) {
    copy {
        from './gemm-server-config'
        include "*.yml"
        into 'src/main/resources'
    }
}